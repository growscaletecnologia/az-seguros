services:
  postgres:
    image: postgres:16-alpine
    container_name: az_pg
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: ${TZ}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 1000M
          cpus: '1.0'
    networks:
      - az_network

  redis:
    image: redis:8.2.2-alpine
    container_name: az_redis
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes", "--save", "60", "1"]
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    ports:
      - "6380:6379"
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
    networks:
      - az_network

networks:
  az_network:
    driver: bridge

volumes:
  pgdata:
  redisdata:
