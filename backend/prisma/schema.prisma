// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserStatus {
  ACTIVE
  INACTIVE
  PENDING
}

model User {
  id              String     @id @default(uuid())
  email           String     @unique
  name            String
  password        String
  status          UserStatus @default(ACTIVE)
  invitationToken String?    @unique
  invitationExpires DateTime?
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt

  userRoles       UserRole[]
  // Outros relacionamentos conforme necess√°rio
}

model Role {
  id          String     @id @default(uuid())
  name        String     @unique
  description String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  userRoles   UserRole[]
  permissions RolePermission[]
}

model UserRole {
  userId    String
  roleId    String
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  role      Role     @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@id([userId, roleId])
}

model Permission {
  id          String   @id @default(uuid())
  resource    String
  action      String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  rolePermissions RolePermission[]

  @@unique([resource, action])
}

model RolePermission {
  roleId       String
  permissionId String
  createdAt    DateTime @default(now())

  role         Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)

  @@id([roleId, permissionId])
}